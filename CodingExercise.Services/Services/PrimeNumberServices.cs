using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace CodingExercise.Services.Services
{
    public class PrimeNumberServices : IPrimeNumberServices
    {
        /// <summary>
        /// This method print the Matrix generated by multiplying the first 10 prime number array found in "number"
        /// </summary>
        /// <param name="number">number to be provided from which first 10 prime number need to be found</param>
        public void PrintPrimeNumbersMatrix(int number)
        {
            var firstTenPrimeNumberList = new List<int>();
            var secondTenPrimeNumberList = new List<int>();
            firstTenPrimeNumberList = GetFirstTenPrimeNumbers(number);
            secondTenPrimeNumberList = GetFirstTenPrimeNumbers(number);


            int[] firstTenPrimeNumberArray = firstTenPrimeNumberList.ToArray();
            int[] secondTenPrimeNumberArray = secondTenPrimeNumberList.ToArray();
            //int[][] firstTenPrimeNumJaggedArray = new int[firstTenPrimeNumberList.Count()][];
            int matrixRowSize = firstTenPrimeNumberArray.Length; //N+1 ROWS
            int matrixColumnSize = secondTenPrimeNumberArray.Length;//N+1 COLUMN
            foreach (var item in firstTenPrimeNumberList)
            {

            }
            int[,] firstTenPrimeNumberMatrix = new int[matrixColumnSize, matrixRowSize];

            for (int i = 0; i < matrixColumnSize; i++)
            {
                for (int j = 0; j < matrixRowSize; j++)
                {

                    firstTenPrimeNumberMatrix[i, j] = firstTenPrimeNumberArray[i] * secondTenPrimeNumberArray[j];
                }
            }
            Console.WriteLine("=================The output matrix is================================");
            // Print the matrix on the console
            for (int row = 0; row < firstTenPrimeNumberMatrix.GetLength(0); row++)
            {
                for (int col = 0; col < firstTenPrimeNumberMatrix.GetLength(1); col++)
                {
                    Console.Write(firstTenPrimeNumberMatrix[row, col]);
                }
                Console.WriteLine();
            }
            Console.ReadLine();


        }

        /// <summary>
        /// This method retuns the 
        /// </summary>
        /// <param name="number"></param>
        /// <returns></returns>
        public int[,] GetPrimeNumbersMatrix(int number)
        {
            var firstTenPrimeNumberList = new List<int>();
            var secondTenPrimeNumberList = new List<int>();
            firstTenPrimeNumberList = GetFirstTenPrimeNumbers(number);
            secondTenPrimeNumberList = GetFirstTenPrimeNumbers(number);


            int[] firstTenPrimeNumberArray = firstTenPrimeNumberList.ToArray();
            int[] secondTenPrimeNumberArray = secondTenPrimeNumberList.ToArray();
            //int[][] firstTenPrimeNumJaggedArray = new int[firstTenPrimeNumberList.Count()][];
            int matrixRowSize = firstTenPrimeNumberArray.Length; //N+1 ROWS
            int matrixColumnSize = secondTenPrimeNumberArray.Length;//N+1 COLUMN
            foreach (var item in firstTenPrimeNumberList)
            {

            }
            int[,] firstTenPrimeNumberMatrix = new int[matrixColumnSize, matrixRowSize];

            for (int i = 0; i < matrixColumnSize; i++)
            {
                for (int j = 0; j < matrixRowSize; j++)
                {

                    firstTenPrimeNumberMatrix[i, j] = firstTenPrimeNumberArray[i] * secondTenPrimeNumberArray[j];
                }
            }
           
           
            for (int row = 0; row < firstTenPrimeNumberMatrix.GetLength(0); row++)
            {
                for (int col = 0; col < firstTenPrimeNumberMatrix.GetLength(1); col++)
                {
                    firstTenPrimeNumberMatrix = new int[row, col];
                }
                
            }
            return firstTenPrimeNumberMatrix;
        }
        /// <summary>
        /// This method get the first 10 prime number found in the inputNumber
        /// </summary>
        /// <param name="inputNumber">number to be provided from which first 10 prime number need to be found</param>
        /// <returns></returns>
        public List<int> GetFirstTenPrimeNumbers(int inputNumber)
        {
            var firstTenPrimeNumbers = new List<int>();
            bool primeStatus;
            int counter = 0;
            for (int i = 1; i <= inputNumber; i++)
            {
                primeStatus = IsPrime(i);
                if (primeStatus && counter < 10)
                {
                    counter++;
                    firstTenPrimeNumbers.Add(i);

                }
            }

            return firstTenPrimeNumbers;
        }

        /// <summary>
        /// This method checks whether the number is prime number or not. If the number is prime then returns true or else return false
        /// </summary>
        /// <param name="numbersToBeCheckedForPrime">number that is to be checked whether prime number</param>
        /// <returns></returns>
        public bool IsPrime(int numbersToBeCheckedForPrime)
        {
            // Test whether the parameter is a prime number.
            if ((numbersToBeCheckedForPrime & 1) == 0)
            {
                if (numbersToBeCheckedForPrime == 2)
                {
                    return true;
                }
                else
                {
                    return false;
                }
            }


            return numbersToBeCheckedForPrime != 1;
        }
    }
}
